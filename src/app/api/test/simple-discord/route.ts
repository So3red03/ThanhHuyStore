import { NextRequest, NextResponse } from 'next/server';
import { DiscordWebhookService } from '../../../libs/discordWebhook';

// Simple test ƒë·ªÉ g·ª≠i Discord message
export async function GET(request: NextRequest) {
  try {
    console.log('üß™ Testing Discord webhook...');

    const discordService = DiscordWebhookService.getInstance();
    
    // Test simple message
    await discordService.sendSimpleMessage('üß™ Test message from ThanhHuy Store promotion system!');
    
    // Test connection
    const connectionTest = await discordService.testConnection();
    
    return NextResponse.json({
      success: true,
      message: 'Discord test completed',
      data: {
        connectionTest,
        messageSent: true
      }
    });

  } catch (error) {
    console.error('‚ùå Error testing Discord:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}

// POST ƒë·ªÉ test v·ªõi fake suggestions
export async function POST(request: NextRequest) {
  try {
    const discordService = DiscordWebhookService.getInstance();
    
    // T·∫°o fake suggestions ƒë·ªÉ test
    const fakeSuggestions = [
      {
        id: 'test-1',
        type: 'STOCK_CLEARANCE' as const,
        priority: 'HIGH' as const,
        title: 'Test S·∫£n ph·∫©m iPhone 16 Pro Max t·ªìn kho cao',
        description: 'S·∫£n ph·∫©m ƒë√£ t·ªìn kho 5 ng√†y, ch∆∞a c√≥ ƒë∆°n h√†ng',
        suggestedAction: 'T·∫°o voucher gi·∫£m gi√° 15%',
        data: {
          productId: '676e14af2a435f5f18b6c2f3',
          productName: 'iPhone 16 Pro Max 1TB',
          currentStock: 18,
          daysWithoutSale: 5,
          suggestedDiscount: 15,
          reasoning: [
            'T·ªìn kho cao: 18 s·∫£n ph·∫©m',
            'Kh√¥ng c√≥ ƒë∆°n h√†ng trong 30 ng√†y',
            'ƒê√£ t·ªìn kho 5 ng√†y',
            'Kh√¥ng c√≥ ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i hi·ªán t·∫°i'
          ]
        }
      },
      {
        id: 'test-2',
        type: 'PRODUCT_VOUCHER' as const,
        priority: 'MEDIUM' as const,
        title: 'Test S·∫£n ph·∫©m iPad Pro b√°n ch·∫≠m',
        description: 'Ch·ªâ c√≥ 0 ƒë∆°n h√†ng v√† gi√° cao h∆°n trung b√¨nh',
        suggestedAction: 'T·∫°o voucher th·ª≠ nghi·ªám 10%',
        data: {
          productId: '676922ecd04035bd693c1c2f',
          productName: 'iPad Pro 11-inch Wi‚ÄëFi 128GB',
          currentStock: 4,
          suggestedDiscount: 10,
          reasoning: [
            '√çt ƒë∆°n h√†ng: 0 ƒë∆°n trong 30 ng√†y',
            'T·ªìn kho: 4 s·∫£n ph·∫©m',
            'C√≥ th·ªÉ c·∫ßn ƒëi·ªÅu ch·ªânh gi√°'
          ]
        }
      }
    ];

    await discordService.sendPromotionSuggestions(fakeSuggestions);
    
    return NextResponse.json({
      success: true,
      message: 'Fake suggestions sent to Discord',
      data: {
        suggestions: fakeSuggestions,
        count: fakeSuggestions.length
      }
    });

  } catch (error) {
    console.error('‚ùå Error sending fake suggestions:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}
