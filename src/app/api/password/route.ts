import prisma from '../../libs/prismadb';
import { NextResponse } from 'next/server';
const nodemailer = require('nodemailer');
import crypto from 'crypto';

export async function POST(request: Request) {
  try {
    // L·∫•y d·ªØ li·ªáu JSON t·ª´ request
    const body = await request.json();
    const { email } = body;

    const existingUser = await prisma.user.findUnique({
      where: { email }
    });

    if (!existingUser) {
      return NextResponse.json({ message: 'Email kh√¥ng t·ªìn t·∫°i' }, { status: 404 });
    }

    const token = crypto.randomBytes(32).toString('hex');
    const expires = new Date();
    expires.setMinutes(expires.getMinutes() + 5); // Token h·∫øt h·∫°n sau 5 ph√∫t

    await prisma.user.update({
      where: { email: email },
      data: {
        resetPasswordToken: token,
        resetPasswordExpires: expires
      }
    });

    // G·ª≠i email
    try {
      // C·∫•u h√¨nh transporter
      const transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          user: process.env.GMAIL_USER,
          pass: process.env.GMAIL_PASS
        }
      });

      const redirectLink = `http://localhost:3000/passwordrecovery/${token}`;

      // Create beautiful HTML email template
      const htmlTemplate = `
        <!DOCTYPE html>
        <html lang="vi">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Kh√¥i ph·ª•c m·∫≠t kh·∫©u - ThanhHuy Store</title>
          <style>
            * {
              margin: 0;
              padding: 0;
              box-sizing: border-box;
            }
            body {
              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
              line-height: 1.6;
              color: #333;
              background-color: #f8fafc;
            }
            .container {
              max-width: 600px;
              margin: 0 auto;
              background-color: #ffffff;
              border-radius: 12px;
              overflow: hidden;
              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white;
              padding: 40px 30px;
              text-align: center;
            }
            .header h1 {
              font-size: 28px;
              font-weight: 700;
              margin-bottom: 8px;
            }
            .header p {
              font-size: 16px;
              opacity: 0.9;
            }
            .content {
              padding: 40px 30px;
            }
            .greeting {
              font-size: 18px;
              color: #2d3748;
              margin-bottom: 20px;
            }
            .message {
              font-size: 16px;
              color: #4a5568;
              margin-bottom: 30px;
              line-height: 1.7;
            }
            .cta-button {
              display: inline-block;
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white !important;
              text-decoration: none;
              padding: 16px 32px;
              border-radius: 8px;
              font-weight: 600;
              font-size: 16px;
              text-align: center;
              transition: transform 0.2s ease;
              box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            }
            .cta-button:hover {
              transform: translateY(-2px);
            }
            .warning-box {
              background-color: #fef5e7;
              border: 1px solid #f6ad55;
              border-radius: 8px;
              padding: 20px;
              margin: 30px 0;
            }
            .warning-box h3 {
              color: #c05621;
              font-size: 16px;
              margin-bottom: 8px;
              display: flex;
              align-items: center;
            }
            .warning-box p {
              color: #744210;
              font-size: 14px;
              margin: 0;
            }
            .footer {
              background-color: #f7fafc;
              padding: 30px;
              text-align: center;
              border-top: 1px solid #e2e8f0;
            }
            .footer p {
              color: #718096;
              font-size: 14px;
              margin-bottom: 10px;
            }
            .footer a {
              color: #667eea;
              text-decoration: none;
            }
            .security-tips {
              background-color: #edf2f7;
              border-radius: 8px;
              padding: 20px;
              margin: 20px 0;
            }
            .security-tips h3 {
              color: #2d3748;
              font-size: 16px;
              margin-bottom: 12px;
            }
            .security-tips ul {
              color: #4a5568;
              font-size: 14px;
              padding-left: 20px;
            }
            .security-tips li {
              margin-bottom: 6px;
            }
            @media (max-width: 600px) {
              .container {
                margin: 0 10px;
              }
              .header, .content, .footer {
                padding: 20px;
              }
              .header h1 {
                font-size: 24px;
              }
              .cta-button {
                display: block;
                text-align: center;
              }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üîê Kh√¥i ph·ª•c m·∫≠t kh·∫©u</h1>
              <p>ThanhHuy Store - H·ªá th·ªëng b·∫£o m·∫≠t</p>
            </div>

            <div class="content">
              <div class="greeting">
                Xin ch√†o,
              </div>

              <div class="message">
                Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i <strong>ThanhHuy Store</strong>.
                ƒê·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n c·ªßa b·∫°n, vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t·∫°o m·∫≠t kh·∫©u m·ªõi.
              </div>

              <div style="text-align: center; margin: 30px 0;">
                <a href="${redirectLink}" class="cta-button">
                  B·∫•m v√†o ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                </a>
              </div>

              <div class="warning-box">
                <h3>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</h3>
                <p>Link n√†y s·∫Ω <strong>h·∫øt h·∫°n sau 5 ph√∫t</strong> k·ªÉ t·ª´ khi email ƒë∆∞·ª£c g·ª≠i. N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán trong th·ªùi gian n√†y, vui l√≤ng y√™u c·∫ßu link m·ªõi.</p>
              </div>

              <div class="security-tips">
                <h3>üí° M·∫πo b·∫£o m·∫≠t:</h3>
                <ul>
                  <li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh v·ªõi √≠t nh·∫•t 8 k√Ω t·ª±</li>
                  <li>K·∫øt h·ª£p ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát</li>
                  <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi b·∫•t k·ª≥ ai</li>
                  <li>Thay ƒë·ªïi m·∫≠t kh·∫©u ƒë·ªãnh k·ª≥ ƒë·ªÉ b·∫£o m·∫≠t t·ªëi ∆∞u</li>
                </ul>
              </div>

              <div class="message" style="margin-top: 30px; font-size: 14px; color: #718096;">
                N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
                T√†i kho·∫£n c·ªßa b·∫°n v·∫´n an to√†n v√† kh√¥ng c√≥ thay ƒë·ªïi n√†o ƒë∆∞·ª£c th·ª±c hi·ªán.
              </div>
            </div>

            <div class="footer">
              <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª´ h·ªá th·ªëng t·ª± ƒë·ªông c·ªßa <strong>ThanhHuy Store</strong></p>
              <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá: <a href="mailto:support@thanhhuystore.com">support@thanhhuystore.com</a></p>
              <p style="margin-top: 15px; font-size: 12px;">
                ¬© 2024 ThanhHuy Store. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
              </p>
            </div>
          </div>
        </body>
        </html>
      `;

      const mailOptions = {
        from: process.env.GMAIL_USER,
        to: email,
        subject: 'üîê Kh√¥i ph·ª•c m·∫≠t kh·∫©u - ThanhHuy Store',
        text: `Kh√¥i ph·ª•c m·∫≠t kh·∫©u ThanhHuy Store\n\nXin ch√†o,\n\nCh√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.\n\nVui l√≤ng nh·∫•p v√†o link sau ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u: ${redirectLink}\n\nL∆∞u √Ω: Link n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t.\n\nN·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.\n\nTr√¢n tr·ªçng,\nThanhHuy Store`,
        html: htmlTemplate
      };

      // G·ª≠i email
      transporter.sendMail(mailOptions);
    } catch (error) {
      console.error('L·ªói khi g·ª≠i email:', error);
      throw new Error('G·ª≠i email th·∫•t b·∫°i');
    }

    return NextResponse.json({ message: 'Email sent successfully' }, { status: 200 });
  } catch (error) {
    console.error('Error sending email:', error);
    return NextResponse.json({ message: 'Failed to send email' }, { status: 500 });
  }
}
