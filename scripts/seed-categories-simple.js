const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seedCategories() {
  try {
    console.log('üå± Starting category seeding...');

    // X√≥a d·ªØ li·ªáu c≈© n·∫øu c√≥
    await prisma.category.deleteMany({});
    console.log('üóëÔ∏è Cleared existing categories');

    // T·∫°o danh m·ª•c cha
    console.log('üì± Creating parent categories...');

    const iphone = await prisma.category.create({
      data: {
        name: 'iPhone',
        slug: 'iphone',
        description: 'ƒêi·ªán tho·∫°i iPhone ch√≠nh h√£ng',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fiphone.jpg?alt=media',
        icon: 'üì±'
      }
    });

    const ipad = await prisma.category.create({
      data: {
        id: 'ipad',
        name: 'iPad',
        slug: 'ipad',
        description: 'M√°y t√≠nh b·∫£ng iPad ch√≠nh h√£ng',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fipad.jpg?alt=media',
        icon: 'üì±'
      }
    });

    const mac = await prisma.category.create({
      data: {
        id: 'mac',
        name: 'Mac',
        slug: 'mac',
        description: 'M√°y t√≠nh Mac ch√≠nh h√£ng',
        image: 'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fmac.jpg?alt=media',
        icon: 'üíª'
      }
    });

    const appleWatch = await prisma.category.create({
      data: {
        id: 'apple-watch',
        name: 'Apple Watch',
        slug: 'apple-watch',
        description: 'ƒê·ªìng h·ªì th√¥ng minh Apple Watch',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fapple-watch.jpg?alt=media',
        icon: '‚åö'
      }
    });

    const airpods = await prisma.category.create({
      data: {
        id: 'airpods',
        name: 'AirPods',
        slug: 'airpods',
        description: 'Tai nghe kh√¥ng d√¢y AirPods',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fairpods.jpg?alt=media',
        icon: 'üéß'
      }
    });

    const phuKien = await prisma.category.create({
      data: {
        id: 'phu-kien',
        name: 'Ph·ª• ki·ªán',
        slug: 'phu-kien',
        description: 'Ph·ª• ki·ªán Apple ch√≠nh h√£ng',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fphu-kien.jpg?alt=media',
        icon: 'üîå'
      }
    });

    console.log('‚úÖ Created all parent categories');

    // T·∫°o danh m·ª•c con cho iPhone
    console.log('üìÇ Creating iPhone subcategories...');

    await prisma.category.create({
      data: {
        id: 'iphone-15-series',
        name: 'iPhone 15 Series',
        slug: 'iphone-15-series',
        description: 'iPhone 15, 15 Plus, 15 Pro, 15 Pro Max',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fiphone-15.jpg?alt=media',
        parentId: 'iphone'
      }
    });

    await prisma.category.create({
      data: {
        id: 'iphone-14-series',
        name: 'iPhone 14 Series',
        slug: 'iphone-14-series',
        description: 'iPhone 14, 14 Plus, 14 Pro, 14 Pro Max',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fiphone-14.jpg?alt=media',
        parentId: 'iphone'
      }
    });

    await prisma.category.create({
      data: {
        id: 'iphone-13-series',
        name: 'iPhone 13 Series',
        slug: 'iphone-13-series',
        description: 'iPhone 13, 13 Mini, 13 Pro, 13 Pro Max',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fiphone-13.jpg?alt=media',
        parentId: 'iphone'
      }
    });

    await prisma.category.create({
      data: {
        id: 'iphone-12-series',
        name: 'iPhone 12 Series',
        slug: 'iphone-12-series',
        description: 'iPhone 12, 12 Mini, 12 Pro, 12 Pro Max',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fiphone-12.jpg?alt=media',
        parentId: 'iphone'
      }
    });

    // T·∫°o danh m·ª•c con cho iPad
    console.log('üìÇ Creating iPad subcategories...');

    await prisma.category.create({
      data: {
        id: 'ipad-pro',
        name: 'iPad Pro',
        slug: 'ipad-pro',
        description: 'iPad Pro 11 inch v√† 12.9 inch',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fipad-pro.jpg?alt=media',
        parentId: 'ipad'
      }
    });

    await prisma.category.create({
      data: {
        id: 'ipad-air',
        name: 'iPad Air',
        slug: 'ipad-air',
        description: 'iPad Air th·∫ø h·ªá m·ªõi',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fipad-air.jpg?alt=media',
        parentId: 'ipad'
      }
    });

    await prisma.category.create({
      data: {
        id: 'ipad-gen',
        name: 'iPad',
        slug: 'ipad-gen',
        description: 'iPad th·∫ø h·ªá 9, 10',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fipad-gen.jpg?alt=media',
        parentId: 'ipad'
      }
    });

    await prisma.category.create({
      data: {
        id: 'ipad-mini',
        name: 'iPad Mini',
        slug: 'ipad-mini',
        description: 'iPad Mini th·∫ø h·ªá 6',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fipad-mini.jpg?alt=media',
        parentId: 'ipad'
      }
    });

    // T·∫°o danh m·ª•c con cho Mac
    console.log('üìÇ Creating Mac subcategories...');

    await prisma.category.create({
      data: {
        id: 'macbook-air',
        name: 'MacBook Air',
        slug: 'macbook-air',
        description: 'MacBook Air M1, M2, M3',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fmacbook-air.jpg?alt=media',
        parentId: 'mac'
      }
    });

    await prisma.category.create({
      data: {
        id: 'macbook-pro',
        name: 'MacBook Pro',
        slug: 'macbook-pro',
        description: 'MacBook Pro 13, 14, 16 inch',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fmacbook-pro.jpg?alt=media',
        parentId: 'mac'
      }
    });

    await prisma.category.create({
      data: {
        id: 'imac',
        name: 'iMac',
        slug: 'imac',
        description: 'iMac 24 inch M1, M3',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fimac.jpg?alt=media',
        parentId: 'mac'
      }
    });

    await prisma.category.create({
      data: {
        id: 'mac-mini',
        name: 'Mac Mini',
        slug: 'mac-mini',
        description: 'Mac Mini M1, M2',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fmac-mini.jpg?alt=media',
        parentId: 'mac'
      }
    });

    await prisma.category.create({
      data: {
        id: 'mac-studio',
        name: 'Mac Studio',
        slug: 'mac-studio',
        description: 'Mac Studio M1 Max, M2 Max',
        image:
          'https://firebasestorage.googleapis.com/v0/b/thanhhuystore.appspot.com/o/categories%2Fmac-studio.jpg?alt=media',
        parentId: 'mac'
      }
    });

    console.log('üéâ Category seeding completed successfully!');
    console.log('üìä Created 6 parent categories and multiple subcategories');
  } catch (error) {
    console.error('‚ùå Error seeding categories:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ch·∫°y script
if (require.main === module) {
  seedCategories();
}

module.exports = { seedCategories };
